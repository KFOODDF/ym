<?xml version="1.0" encoding="UTF-8"?>
<!-- MyBatis 映射文件，定义了与 article 表相关的 SQL 操作 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kaka.mapper.ArticleMapper">

    <!-- 插入文章到 article 表 -->
    <insert id="saveArticle">
        <!-- 定义插入操作，将文章的各个属性插入到 article 表中 -->
        INSERT INTO article(
        articleId, author, originalAuthor, articleTitle, publishDate,
        updateDate, articleContent, articleTags, articleType,
        articleCategories, articleUrl, articleTabloid, likes,
        lastArticleId, nextArticleId
        )
        VALUES
        (
        #{articleId}, #{author}, #{originalAuthor}, #{articleTitle},
        #{publishDate}, #{updateDate}, #{articleContent}, #{articleTags},
        #{articleType}, #{articleCategories}, #{articleUrl},
        #{articleTabloid}, #{likes}, #{lastArticleId}, #{nextArticleId}
        )
    </insert>

    <!-- 查询所有文章，按照 id 降序排列 -->
    <select id="getArticleManagement" resultType="com.kaka.model.Article">
        <!-- 获取 article 表中的所有文章，并按照 id 降序排列 -->
        select * from article order by  id desc
    </select>

    <!-- 根据给定的 id 查询特定的文章 -->
    <select id="getArticleById" resultType="com.kaka.model.Article">
        <!-- 根据指定的 id 查询 article 表中的文章 -->
        select * from article where id = #{id}
    </select>

    <!-- 更新文章的上一篇或下一篇文章的 id -->
    <update id="updateLastNextId">
        <!-- 根据给定的 articleId 更新文章的上一篇或下一篇文章的 id -->
        update  article set ${lastOrNextstr} = #{updateId} where articleId =#{articleId}
    </update>

    <!-- 根据给定的 articleId 删除文章 -->
    <delete id="deleteArticle">
        <!-- 删除指定 articleId 的文章 -->
        delete from article where articleId = #{articleId}
    </delete>

</mapper>
